{
  "openapi": "3.0.0",
  "x-api-id": "dapi",
  "info": {
    "title": "DAPI",
    "version": "0.1.2",
    "description": "Dash Decentralized API (DAPI)"
  },
  "servers": [
    {
      "url": "{url}:{port}",
      "description": "User-defined network",
      "variables": {
        "url": {
          "default": "http://dapi.dash.org"
        },
        "port": {
          "default": "3000"
        }
      }
    }
  ],
  "paths": {
    "/addToBloomFilter": {
      "post": {
        "operationId": "addToBloomFilter",
        "deprecated": false,
        "summary": "addToBloomFilter",
        "description": "Adds an element to an existing bloom filter",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (boolean) indicating if the element was successfully added."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "addToBloomFilter",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "originalFilter",
                      "element"
                    ],
                    "properties": {
                      "originalFilter": {
                        "type": "string",
                        "default": "",
                        "description": "Original filter"
                      },
                      "element": {
                        "type": "string",
                        "default": "",
                        "description": "Element to add to filter"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clearBloomFilter": {
      "post": {
        "operationId": "clearBloomFilter",
        "deprecated": false,
        "summary": "clearBloomFilter",
        "description": "Clear the bloom filter",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (boolean) indicating if the filter was successfully cleared."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "clearBloomFilter",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "filter"
                    ],
                    "properties": {
                      "originalFilter": {
                        "type": "string",
                        "default": "",
                        "description": "Original filter"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/estimateFee": {
      "post": {
        "operationId": "estimateFee",
        "deprecated": false,
        "summary": "estimateFee",
        "description": "Estimates the transaction fee necessary for confirmation to occur within a certain number of blocks",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (number) containing fee in duffs per kilobyte."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "estimateFee",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "nbBlocks"
                    ],
                    "properties": {
                      "nbBlocks": {
                        "type": "integer",
                        "default": 1,
                        "description": "Number of blocks for fee estimate"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fetchDapContract": {
      "post": {
        "operationId": "fetchDapContract",
        "deprecated": false,
        "summary": "fetchDapContract",
        "description": "Fetch a user's DAP space",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) with the user's dap space."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "fetchDapContract",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "dapId"
                    ],
                    "properties": {
                      "dapId": {
                        "type": "string",
                        "default": "",
                        "description": "A user's DAP ID"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fetchDapObjects": {
      "post": {
        "operationId": "fetchDapObjects",
        "deprecated": false,
        "summary": "fetchDapObjects",
        "description": "Fetches user objects for a given condition",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) with user objects."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "fetchDapObjects",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "dapId",
                      "type"
                    ],
                    "properties": {
                      "dapId": {
                        "type": "string",
                        "default": "",
                        "description": "A user's DAP ID"
                      },
                      "type": {
                        "type": "string",
                        "default": "",
                        "description": "DAP object type to fetch"
                      },
                      "options": {
                        "title": "Options",
                        "type": "object",
                        "properties": {
                          "where": {
                            "type": "string",
                            "default": "",
                            "description": "Mongo-like query"
                          },
                          "orderBy": {
                            "type": "string",
                            "default": "",
                            "description": "Mongo-like sort field"
                          },
                          "limit": {
                            "type": "integer",
                            "default": "",
                            "description": "How many objects to fetch"
                          },
                          "startAt": {
                            "type": "integer",
                            "default": "",
                            "description": "Number of objects to skip"
                          },
                          "startAfter": {
                            "type": "integer",
                            "default": "",
                            "description": "Exlusive skip"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/findDataForBlock": {
      "post": {
        "operationId": "findDataForBlock",
        "deprecated": false,
        "summary": "findDataForBlock",
        "description": "Finds relevant data in a specific block for addresses encoded in a bloom filter",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. An object containing block headers."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "findDataForBlock",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "filter"
                    ],
                    "properties": {
                      "filter": {
                        "type": "string",
                        "default": "",
                        "description": "A bloom filter"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generate": {
      "post": {
        "operationId": "generate",
        "deprecated": false,
        "summary": "generate",
        "description": "Generates blocks on demand",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (string array) containing strings of block hashes."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "generate",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "default": 1,
                        "description": "Number of blocks to generate"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAddressSummary": {
      "post": {
        "operationId": "getAddressSummary",
        "deprecated": false,
        "summary": "getAddressSummary",
        "description": "Get an address summary given an address",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing summary details for the requested address."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getAddressSummary",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "address"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "default": "yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd",
                        "description": "Dash address"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAddressTotalReceived": {
      "post": {
        "operationId": "getAddressTotalReceived",
        "deprecated": false,
        "summary": "getAddressTotalReceived",
        "description": "Get the total amount of duffs received by an address",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (number) indicating the number of duffs received by the address."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getAddressTotalReceived",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "address"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "default": "yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd",
                        "description": "Dash address"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAddressTotalSent": {
      "post": {
        "operationId": "getAddressTotalSent",
        "deprecated": false,
        "summary": "getAddressTotalSent",
        "description": "Get the total amount of duffs sent by an address",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (number) indicating the number of duffs sent by the address."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getAddressTotalSent",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "address"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "default": "yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd",
                        "description": "Dash address"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAddressUnconfirmedBalance": {
      "post": {
        "operationId": "getAddressUnconfirmedBalance",
        "deprecated": false,
        "summary": "getAddressUnconfirmedBalance",
        "description": "Get the total unconfirmed balance for the address",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (number) indicating the number of unconfirmed duffs for the address."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getAddressUnconfirmedBalance",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "address"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "default": "yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd",
                        "description": "Dash address"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBalance": {
      "post": {
        "operationId": "getBalance",
        "deprecated": false,
        "summary": "getBalance",
        "description": "Get the calculated balance for the address",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (number) indicating the balance of the address."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBalance",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "address"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "default": "yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd",
                        "description": "Dash address"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBestBlockHeight": {
      "post": {
        "operationId": "getbestblockheight",
        "deprecated": false,
        "summary": "getBestBlockHeight",
        "description": "Returns the best block height",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise indicating the best seen block height."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBestBlockHeight",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBlockHash": {
      "post": {
        "operationId": "getBlockHash",
        "deprecated": false,
        "summary": "getBlockHash",
        "description": "Returns the block hash for the given height",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (string) containing the requested block hash."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBlockHash",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "height"
                    ],
                    "properties": {
                      "height": {
                        "type": "integer",
                        "default": 1,
                        "description": "Block height",
                        "minimum": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBlockHeader": {
      "post": {
        "operationId": "getBlockHeader",
        "deprecated": false,
        "summary": "getBlockHeader",
        "description": "Returns the block header corresponding to the requested block hash",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Returns the block header corresponding to the requested block hash."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBlockHeader",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "blockHash"
                    ],
                    "properties": {
                      "blockHash": {
                        "type": "string",
                        "default": "0000000000000000000000000000000000000000000000000000000000000000",
                        "description": "Block hash"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBlockHeaders": {
      "post": {
        "operationId": "getBlockHeaders",
        "deprecated": false,
        "summary": "getBlockHeaders",
        "description": "Returns the requested number of block headers starting at the requested height",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object array) containing an array of block headers."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBlockHeaders",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "offset",
                      "limit"
                    ],
                    "properties": {
                      "offset": {
                        "type": "integer",
                        "default": 1,
                        "description": "Lowest block height to include",
                        "minimum": 0
                      },
                      "limit": {
                        "type": "integer",
                        "default": 1,
                        "description": "The number of headers to return (0 < limit <=25)",
                        "minimum": 1,
                        "maximum": 25
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBlocks": {
      "post": {
        "operationId": "getBlocks",
        "deprecated": false,
        "summary": "getBlocks",
        "description": "Returns info for blocks meeting the provided criteria",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object array) containing an array of blocks."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBlocks",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "blockDate",
                      "limit"
                    ],
                    "properties": {
                      "blockDate": {
                        "type": "string",
                        "default": "2018-06-01T00:00:00.000Z",
                        "description": "Starting date for blocks to get"
                      },
                      "limit": {
                        "type": "integer",
                        "default": 1,
                        "description": "Number of blocks to return",
                        "minimum": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getHistoricBlockchainDataSyncStatus": {
      "post": {
        "operationId": "getHistoricBlockchainDataSyncStatus",
        "deprecated": false,
        "summary": "getHistoricBlockchainDataSyncStatus",
        "description": "Returns historic blockchain data sync status",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing historical sync status."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getHistoricBlockchainDataSyncStatus",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getMNList": {
      "post": {
        "operationId": "getMNList",
        "deprecated": false,
        "summary": "getMNList",
        "description": "Returns masternode list",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object array) containing masternode list."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getMNList",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getMnListDiff": {
      "post": {
        "operationId": "getMnListDiff",
        "deprecated": false,
        "summary": "getMnListDiff",
        "description": "Returns masternode list diff for the provided block hashes",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object array) containing a diff of the masternode list based on the provided block hashes."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getMnListDiff",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "baseBlockHash",
                      "blockHash"
                    ],
                    "properties": {
                      "baseBlockHash": {
                        "type": "string",
                        "default": "0000000000000000000000000000000000000000000000000000000000000000",
                        "description": "Block hash"
                      },
                      "blockHash": {
                        "type": "string",
                        "default": "0000000000000000000000000000000000000000000000000000000000000000",
                        "description": "Block hash"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getPeerDataSyncStatus": {
      "post": {
        "operationId": "getPeerDataSyncStatus",
        "deprecated": false,
        "summary": "getPeerDataSyncStatus",
        "description": "Returns peer data sync status",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing peer data sync status."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getPeerDataSyncStatus",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getQuorum": {
      "post": {
        "operationId": "getQuorum",
        "deprecated": false,
        "summary": "getQuorum",
        "description": "Returns a user quorum (LLMQ)",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing a user quorum."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getQuorum",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "regTxId"
                    ],
                    "properties": {
                      "regTxId": {
                        "type": "string",
                        "default": "0000000000000000000000000000000000000000000000000000000000000000",
                        "description": "The TXID of the user's registration subscription transaction"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getRawBlock": {
      "post": {
        "operationId": "getRawBlock",
        "deprecated": false,
        "summary": "getRawBlock",
        "description": "Returns the raw block for the provided block hash",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing the raw block details."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getRawBlock",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "blockHash"
                    ],
                    "properties": {
                      "blockHash": {
                        "type": "string",
                        "default": "0000000000000000000000000000000000000000000000000000000000000000",
                        "description": "Hash of the block to request"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getSpvData": {
      "post": {
        "operationId": "getSpvData",
        "deprecated": false,
        "summary": "getSpvData",
        "description": "Returns block headers",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. An object containing block headers."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getSpvData",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "filter"
                    ],
                    "properties": {
                      "filter": {
                        "type": "string",
                        "default": "",
                        "description": "A bloom filter"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getStatus": {
      "post": {
        "operationId": "getStatus",
        "deprecated": false,
        "summary": "getStatus",
        "description": "Returns status based on query parameter",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Status details for the provided query."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getStatus",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "query"
                    ],
                    "properties": {
                      "query": {
                        "type": "string",
                        "default": "getInfo",
                        "description": "Type of status to get (getInfo, getDifficulty, getBestBlockHash, or getLastBlockHash)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getTransactionById": {
      "post": {
        "operationId": "getTransactionById",
        "deprecated": false,
        "summary": "getTransactionById",
        "description": "Returns transaction for the given hash",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing transaction info."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getTransactionById",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "txid"
                    ],
                    "properties": {
                      "txid": {
                        "type": "string",
                        "default": "0000000000000000000000000000000000000000000000000000000000000000",
                        "description": "The TXID of the transaction being requested"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getTransactionsByAddress": {
      "post": {
        "operationId": "getTransactionsByAddress",
        "deprecated": false,
        "summary": "getTransactionsByAddress",
        "description": "Returns all transaction related to the given address",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object array) containing all transaction objects for the requested address."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getTransactionsByAddress",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "address"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "default": "yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd",
                        "description": "Dash address"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUTXO": {
      "post": {
        "operationId": "getUTXO",
        "deprecated": false,
        "summary": "getUTXO",
        "description": "Returns unspent outputs for the given address",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object array) containing unspent transaction objects."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getUTXO",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "address"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "default": "yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd",
                        "description": "Dash address"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUser": {
      "post": {
        "operationId": "getUser",
        "deprecated": false,
        "summary": "getUser",
        "description": "Returns a blockchain user",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing user info."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getUser",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "username"
                    ],
                    "properties": {
                      "username": {
                        "type": "string",
                        "default": "DashUser001",
                        "description": "Either a username or a user's registration tx id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUserDapContext": {
      "post": {
        "operationId": "getUserDapContext",
        "deprecated": false,
        "summary": "getUserDapContext",
        "description": "Returns a user DAP Context",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing details of a user's DAP context."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getUserDapContext",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "dapid",
                      "userId"
                    ],
                    "properties": {
                      "dapid": {
                        "type": "string",
                        "default": "",
                        "description": "The ID of a DAP the user is registered with"
                      },
                      "userId": {
                        "type": "string",
                        "default": "",
                        "description": "ID of the user"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUserDapSpace": {
      "post": {
        "operationId": "getUserDapSpace",
        "deprecated": false,
        "summary": "getUserDapSpace",
        "description": "Returns a user DAP Space",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) containing details of a user's DAP space."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getUserDapSpace",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "dapid",
                      "userId"
                    ],
                    "properties": {
                      "dapid": {
                        "type": "string",
                        "default": "",
                        "description": "The ID of a DAP the user is registered with"
                      },
                      "userId": {
                        "type": "string",
                        "default": "",
                        "description": "ID of the user"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/loadBloomFilter": {
      "post": {
        "operationId": "loadBloomFilter",
        "deprecated": false,
        "summary": "loadBloomFilter",
        "description": "Load a bloom filter",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (boolean) indicating if the filter was successfully loaded."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "loadBloomFilter",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "filter"
                    ],
                    "properties": {
                      "filter": {
                        "type": "string",
                        "default": "",
                        "description": "Filter to load"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchDapContracts": {
      "post": {
        "operationId": "searchDapContracts",
        "deprecated": false,
        "summary": "searchDapContracts",
        "description": "Returns an array of DAP IDs",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (string array) containing an array of DAP IDs."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "searchDapContracts",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "pattern"
                    ],
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "default": "",
                        "description": "Search pattern"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchUsers": {
      "post": {
        "operationId": "searchUsers",
        "deprecated": false,
        "summary": "searchUsers",
        "description": "Adds an element to an existing bloom filter",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object with array of strings) containing the number of results returned and an array of matching users."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "searchUsers",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "pattern",
                      "limit",
                      "offset"
                    ],
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "default": "DashUser001",
                        "description": "Search pattern"
                      },
                      "limit": {
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of results to return",
                        "minimum": 1,
                        "maximum": 25
                      },
                      "offset": {
                        "type": "integer",
                        "default": 0,
                        "description": "Starting location in result set",
                        "minimum": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sendRawIxTransaction": {
      "post": {
        "operationId": "sendRawIxTransaction",
        "deprecated": false,
        "summary": "sendRawIxTransaction",
        "description": "Sends raw InstantSend transaction and returns the transaction ID",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (string array) containing the transaction ID."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "sendRawIxTransaction",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "rawIxTransaction"
                    ],
                    "properties": {
                      "rawIxTransaction": {
                        "type": "string",
                        "default": "",
                        "description": "Raw InstantSend transaction"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sendRawTransaction": {
      "post": {
        "operationId": "sendRawTransaction",
        "deprecated": false,
        "summary": "sendRawTransaction",
        "description": "Sends raw transaction and returns the transaction ID",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (string array) containing the transaction ID."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "sendRawTransaction",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "rawTransaction"
                    ],
                    "properties": {
                      "rawTransaction": {
                        "type": "string",
                        "default": "",
                        "description": "Raw transaction"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sendRawTransition": {
      "post": {
        "operationId": "sendRawTransition",
        "deprecated": false,
        "summary": "sendRawTransition",
        "description": "Sends raw state transition to the network",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (string) containing confirmed state transition transaction."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "sendRawTransition",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "rawTransitionHeader"
                    ],
                    "properties": {
                      "rawTransitionHeader": {
                        "type": "string",
                        "default": "",
                        "description": "Raw transition"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonRpcRequired": {
        "type": "object",
        "required": [
          "id",
          "jsonrpc"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "default": 1,
            "format": "int32",
            "description": "Request ID"
          },
          "jsonrpc": {
            "type": "string",
            "default": "2.0",
            "description": "JSON-RPC Version (2.0)"
          }
        },
        "discriminator": {
          "propertyName": "method_name"
        }
      }
    }
  },
  "x-send-defaults": true,
  "x-headers": [],
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": [
    "curl",
    "node",
    "ruby",
    "javascript",
    "python"
  ],
  "tags": []
}
