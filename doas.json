{
  "openapi": "3.0.0",
  "x-api-id": "dapi",
  "info": {
    "title": "DAPI",
    "version": "0.1.2",
    "description": "The Dash decentralized API"
  },
  "servers": [
    {
      "url": "http://devnet-maithai.thephez.com:3000",
      "description": "Dash developer network"
    },
    {
      "url": "http://dapi-mainnet.dash.org:3000",
      "description": "Dash main network"
    },
    {
      "url": "http://dapi-testnet.dash.org:3000",
      "description": "Dash public test network"
    },
    {
      "url": "{url}:{port}",
      "description": "User-defined network",
      "variables": {
        "url": {
          "default": "http://devnet.example.com"
        },
        "port": {
          "default": "3000"
        }
      }
    }
  ],
  "paths": {
    "/addToBloomFilter": {
      "post": {
        "operationId": "addToBloomFilter",
        "deprecated": false,
        "summary": "addToBloomFilter",
        "description": "Adds an element to an existing bloom filter",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (boolean) indicating if the element was successfully added."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "addToBloomFilter",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "originalFilter",
                      "element"
                    ],
                    "properties": {
                      "originalFilter": {
                        "type": "string",
                        "default": "",
                        "description": "Original filter"
                      },
                      "element": {
                        "type": "string",
                        "default": "",
                        "description": "Element to add to filter"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clearBloomFilter": {
      "post": {
        "operationId": "clearBloomFilter",
        "deprecated": false,
        "summary": "clearBloomFilter",
        "description": "Clear the bloom filter",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (boolean) indicating if the filter was successfully cleared."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "clearBloomFilter",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "filter"
                    ],
                    "properties": {
                      "originalFilter": {
                        "type": "string",
                        "default": "",
                        "description": "Original filter"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/estimateFee": {
      "post": {
        "operationId": "estimateFee",
        "deprecated": false,
        "summary": "estimateFee",
        "description": "Estimates the transaction fee necessary for confirmation to occur within a certain number of blocks",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (number) containing fee in duffs per kilobyte."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "estimateFee",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "nbBlocks"
                    ],
                    "properties": {
                      "nbBlocks": {
                        "type": "integer",
                        "default": 1,
                        "description": "Number of blocks for fee estimate"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fetchDapContract": {
      "post": {
        "operationId": "fetchDapContract",
        "deprecated": false,
        "summary": "fetchDapContract",
        "description": "Fetch a user's DAP space",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object) with the user's dap space."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "fetchDapContract",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "dapId"
                    ],
                    "properties": {
                      "dapId": {
                        "type": "string",
                        "default": "",
                        "description": "A user's DAP ID"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fetchDapObjects": {
      "post": {
        "operationId": "fetchDapObjects",
        "deprecated": false,
        "summary": "fetchDapObjects",
        "description": "Fetches user objects for a given condition",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise (object)"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "fetchDapObjects",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "dapId",
                      "type"
                    ],
                    "properties": {
                      "dapId": {
                        "type": "string",
                        "default": "",
                        "description": "A user's DAP ID"
                      },
                      "type": {
                        "type": "string",
                        "default": "",
                        "description": "A user's DAP ID"
                      },
                      "options": {
                        "title": "Options",
                        "type": "object",
                        "properties": {
                          "where": {
                            "type": "string",
                            "default": "",
                            "description": "Mongo-like query"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBestBlockHeight": {
      "post": {
        "operationId": "getbestblockheight",
        "deprecated": false,
        "summary": "getBestBlockHeight",
        "description": "Returns the best block height",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response. Promise indicating the best seen block height."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBestBlockHeight",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBlockHash": {
      "post": {
        "operationId": "getBlockHash",
        "deprecated": false,
        "summary": "Block - get by hash",
        "description": "Returns best block height",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBlockHash",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBlockHeader": {
      "post": {
        "operationId": "getBlockHeader",
        "deprecated": false,
        "summary": "Block - get header",
        "description": "Returns best block height",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBlockHeader",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getBlockHeaders": {
      "post": {
        "operationId": "getBlockHeaders",
        "deprecated": false,
        "summary": "Block - get headers from height",
        "description": "Returns best block height",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getBlockHeader",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getMNList": {
      "post": {
        "operationId": "getMNList",
        "deprecated": false,
        "summary": "getMNList",
        "description": "Returns masternode list",
        "tags": [
          "L1"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getMNList",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getUser": {
      "post": {
        "operationId": "getUser",
        "deprecated": false,
        "summary": "getUser",
        "description": "Returns  a blockchain user",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "getUser",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "username"
                    ],
                    "properties": {
                      "username": {
                        "type": "string",
                        "default": "",
                        "description": "Either a username or a user's registration tx id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchUsers": {
      "post": {
        "operationId": "searchUsers",
        "deprecated": false,
        "summary": "searchUsers",
        "description": "Adds an element to an existing bloom filter",
        "tags": [
          "L2"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "method",
                  "id",
                  "jsonrpc",
                  "params"
                ],
                "properties": {
                  "method": {
                    "type": "string",
                    "default": "searchUsers",
                    "description": "Method name"
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "format": "int32",
                    "description": "Request ID"
                  },
                  "jsonrpc": {
                    "type": "string",
                    "default": "2.0",
                    "description": "JSON-RPC Version (2.0)"
                  },
                  "params": {
                    "title": "Parameters",
                    "type": "object",
                    "required": [
                      "pattern",
                      "limit",
                      "offset"
                    ],
                    "properties": {
                      "pattern": {
                        "type": "string",
                        "default": "User001",
                        "description": "Search pattern"
                      },
                      "limit": {
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of results to return"
                      },
                      "offset": {
                        "type": "integer",
                        "default": 0,
                        "description": "Starting location in result set"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonRpcRequired": {
        "type": "object",
        "required": [
          "id",
          "jsonrpc"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "default": 1,
            "format": "int32",
            "description": "Request ID"
          },
          "jsonrpc": {
            "type": "string",
            "default": "2.0",
            "description": "JSON-RPC Version (2.0)"
          }
        },
        "discriminator": {
          "propertyName": "method_name"
        }
      }
    }
  },
  "x-send-defaults": true,
  "x-headers": [],
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": [
    "curl",
    "node",
    "ruby",
    "javascript",
    "python"
  ],
  "tags": []
}
